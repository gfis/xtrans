/*  CODARecordBase.java - 
 *  @(#) $Id$
 *  Automatically generated by xtrans/web/xslt/genRecord.xsl at 2017-05-28T11:22:44+02:00
 *  DO NOT EDIT HERE - rather inherit from this class!
 */
package org.teherba.xtrans.finance;
import  org.teherba.xtrans.CharRecord;
import  org.teherba.xtrans.BaseTransformer;
import  org.teherba.xtrans.Field;
import  java.sql.Date;
import  java.sql.Timestamp;
import  org.xml.sax.Attributes;
import  org.xml.sax.helpers.AttributesImpl;
import  org.xml.sax.SAXException;

/** .
 *  total length 128 Chars
 */
public class CODARecordBase extends CharRecord {
    public static final int RECORD_LENGTH = 128;
    /** Source code version */
    public static final String CVSID = "@(#) $Id$";


    /** No-args Constructor for .
     */
    public CODARecordBase() {
        super();
        setRecordTag("CODA");
    } // Constructor

    /** Field cdEnreg - code enregistrement */
    protected static final Field CDENREG = new Field(0, 2, "cdEnreg");

    /** Sets cdEnreg - code enregistrement
     *  @param cdEnreg code enregistrement
     */
    public void setCdEnreg(String cdEnreg) {
        setString(0, 2, cdEnreg);
    } // setCdEnreg

    /** Gets cdEnreg - code enregistrement
     *  @return code enregistrement
     */
    public String getCdEnreg() {
        return getString(0, 2);
    } // getCdEnreg
    //----------------
    /** Field c1CdBanque - M bank code */
    protected static final Field C1CDBANQUE = new Field(2 + 0, 5, "c1CdBanque");

    /** Sets c1CdBanque - M bank code
     *  @param c1CdBanque M bank code
     */
    public void setC1CdBanque(String c1CdBanque) {
        setString(2 + 0, 5, c1CdBanque);
    } // setC1CdBanque

    /** Gets c1CdBanque - M bank code
     *  @return M bank code
     */
    public String getC1CdBanque() {
        return getString(2 + 0, 5);
    } // getC1CdBanque
    //----------------
    /** Field c1Reserve1 - X */
    protected static final Field C1RESERVE1 = new Field(2 + 5, 4, "c1Reserve1");

    /** Sets c1Reserve1 - X
     *  @param c1Reserve1 X
     */
    public void setC1Reserve1(String c1Reserve1) {
        setString(2 + 5, 4, c1Reserve1);
    } // setC1Reserve1

    /** Gets c1Reserve1 - X
     *  @return X
     */
    public String getC1Reserve1() {
        return getString(2 + 5, 4);
    } // getC1Reserve1
    //----------------
    /** Field c1CdGuichet - M branch */
    protected static final Field C1CDGUICHET = new Field(2 + 9, 5, "c1CdGuichet");

    /** Sets c1CdGuichet - M branch
     *  @param c1CdGuichet M branch
     */
    public void setC1CdGuichet(String c1CdGuichet) {
        setString(2 + 9, 5, c1CdGuichet);
    } // setC1CdGuichet

    /** Gets c1CdGuichet - M branch
     *  @return M branch
     */
    public String getC1CdGuichet() {
        return getString(2 + 9, 5);
    } // getC1CdGuichet
    //----------------
    /** Field c1CdDevise - O currency code ISO 4217 */
    protected static final Field C1CDDEVISE = new Field(2 + 14, 3, "c1CdDevise");

    /** Sets c1CdDevise - O currency code ISO 4217
     *  @param c1CdDevise O currency code ISO 4217
     */
    public void setC1CdDevise(String c1CdDevise) {
        setString(2 + 14, 3, c1CdDevise);
    } // setC1CdDevise

    /** Gets c1CdDevise - O currency code ISO 4217
     *  @return O currency code ISO 4217
     */
    public String getC1CdDevise() {
        return getString(2 + 14, 3);
    } // getC1CdDevise
    //----------------
    /** Field c1NoChiffres - D apres la virgule du montant */
    protected static final Field C1NOCHIFFRES = new Field(2 + 17, 1, "c1NoChiffres");

    /** Sets c1NoChiffres - D apres la virgule du montant
     *  @param c1NoChiffres D apres la virgule du montant
     */
    public void setC1NoChiffres(long c1NoChiffres) {
        setNumber(2 + 17, 1, c1NoChiffres);
    } // setC1NoChiffres

    /** Gets c1NoChiffres - D apres la virgule du montant
     *  @return D apres la virgule du montant
     */
    public long getC1NoChiffres() {
        return getNumber(2 + 17, 1);
    } // getC1NoChiffres
    //----------------
    /** Field c1Reserve2 - X */
    protected static final Field C1RESERVE2 = new Field(2 + 18, 1, "c1Reserve2");

    /** Sets c1Reserve2 - X
     *  @param c1Reserve2 X
     */
    public void setC1Reserve2(String c1Reserve2) {
        setString(2 + 18, 1, c1Reserve2);
    } // setC1Reserve2

    /** Gets c1Reserve2 - X
     *  @return X
     */
    public String getC1Reserve2() {
        return getString(2 + 18, 1);
    } // getC1Reserve2
    //----------------
    /** Field c1NoCompte - M */
    protected static final Field C1NOCOMPTE = new Field(2 + 19, 11, "c1NoCompte");

    /** Sets c1NoCompte - M
     *  @param c1NoCompte M
     */
    public void setC1NoCompte(String c1NoCompte) {
        setString(2 + 19, 11, c1NoCompte);
    } // setC1NoCompte

    /** Gets c1NoCompte - M
     *  @return M
     */
    public String getC1NoCompte() {
        return getString(2 + 19, 11);
    } // getC1NoCompte
    //----------------
    /** Field c1Reserve3 - X */
    protected static final Field C1RESERVE3 = new Field(2 + 30, 2, "c1Reserve3");

    /** Sets c1Reserve3 - X
     *  @param c1Reserve3 X
     */
    public void setC1Reserve3(String c1Reserve3) {
        setString(2 + 30, 2, c1Reserve3);
    } // setC1Reserve3

    /** Gets c1Reserve3 - X
     *  @return X
     */
    public String getC1Reserve3() {
        return getString(2 + 30, 2);
    } // getC1Reserve3
    //----------------
    /** Field c1DateSolde - M YYMMDD */
    protected static final Field C1DATESOLDE = new Field(2 + 32, 6, "c1DateSolde");

    /** Sets c1DateSolde - M YYMMDD
     *  @param c1DateSolde M YYMMDD
     */
    public void setC1DateSolde(long c1DateSolde) {
        setNumber(2 + 32, 6, c1DateSolde);
    } // setC1DateSolde

    /** Gets c1DateSolde - M YYMMDD
     *  @return M YYMMDD
     */
    public long getC1DateSolde() {
        return getNumber(2 + 32, 6);
    } // getC1DateSolde
    //----------------
    /** Field c1Reserve4 - X */
    protected static final Field C1RESERVE4 = new Field(2 + 38, 50, "c1Reserve4");

    /** Sets c1Reserve4 - X
     *  @param c1Reserve4 X
     */
    public void setC1Reserve4(String c1Reserve4) {
        setString(2 + 38, 50, c1Reserve4);
    } // setC1Reserve4

    /** Gets c1Reserve4 - X
     *  @return X
     */
    public String getC1Reserve4() {
        return getString(2 + 38, 50);
    } // getC1Reserve4
    //----------------
    /** Field c1MontantSolde - M ancien */
    protected static final Field C1MONTANTSOLDE = new Field(2 + 88, 14, "c1MontantSolde");

    /** Sets c1MontantSolde - M ancien
     *  @param c1MontantSolde M ancien
     */
    public void setC1MontantSolde(long c1MontantSolde) {
        setNumber(2 + 88, 14, c1MontantSolde);
    } // setC1MontantSolde

    /** Gets c1MontantSolde - M ancien
     *  @return M ancien
     */
    public long getC1MontantSolde() {
        return getNumber(2 + 88, 14);
    } // getC1MontantSolde
    //----------------
    /** Field c1Reserve5 - X */
    protected static final Field C1RESERVE5 = new Field(2 + 102, 16, "c1Reserve5");

    /** Sets c1Reserve5 - X
     *  @param c1Reserve5 X
     */
    public void setC1Reserve5(String c1Reserve5) {
        setString(2 + 102, 16, c1Reserve5);
    } // setC1Reserve5

    /** Gets c1Reserve5 - X
     *  @return X
     */
    public String getC1Reserve5() {
        return getString(2 + 102, 16);
    } // getC1Reserve5
    //----------------
    /** Field c4Filler - empty */
    protected static final Field C4FILLER = new Field(2 + 0, 4, "c4Filler");

    /** Sets c4Filler - empty
     *  @param c4Filler empty
     */
    public void setC4Filler(String c4Filler) {
        setString(2 + 0, 4, c4Filler);
    } // setC4Filler

    /** Gets c4Filler - empty
     *  @return empty
     */
    public String getC4Filler() {
        return getString(2 + 0, 4);
    } // getC4Filler
    //----------------
    /** Field c4KeyOfOfficeOrigin - branch of origin */
    protected static final Field C4KEYOFOFFICEORIGIN = new Field(2 + 4, 4, "c4KeyOfOfficeOrigin");

    /** Sets c4KeyOfOfficeOrigin - branch of origin
     *  @param c4KeyOfOfficeOrigin branch of origin
     */
    public void setC4KeyOfOfficeOrigin(String c4KeyOfOfficeOrigin) {
        setString(2 + 4, 4, c4KeyOfOfficeOrigin);
    } // setC4KeyOfOfficeOrigin

    /** Gets c4KeyOfOfficeOrigin - branch of origin
     *  @return branch of origin
     */
    public String getC4KeyOfOfficeOrigin() {
        return getString(2 + 4, 4);
    } // getC4KeyOfOfficeOrigin
    //----------------
    /** Field c4DateOperation - YYMMDD booking date */
    protected static final Field C4DATEOPERATION = new Field(2 + 8, 6, "c4DateOperation");

    /** Sets c4DateOperation - YYMMDD booking date
     *  @param c4DateOperation YYMMDD booking date
     */
    public void setC4DateOperation(String c4DateOperation) {
        setString(2 + 8, 6, c4DateOperation);
    } // setC4DateOperation

    /** Gets c4DateOperation - YYMMDD booking date
     *  @return YYMMDD booking date
     */
    public String getC4DateOperation() {
        return getString(2 + 8, 6);
    } // getC4DateOperation
    //----------------
    /** Field c4DateValue - YYMMDD value date */
    protected static final Field C4DATEVALUE = new Field(2 + 14, 6, "c4DateValue");

    /** Sets c4DateValue - YYMMDD value date
     *  @param c4DateValue YYMMDD value date
     */
    public void setC4DateValue(String c4DateValue) {
        setString(2 + 14, 6, c4DateValue);
    } // setC4DateValue

    /** Gets c4DateValue - YYMMDD value date
     *  @return YYMMDD value date
     */
    public String getC4DateValue() {
        return getString(2 + 14, 6);
    } // getC4DateValue
    //----------------
    /** Field c4CommonDetail - from GVC or Reason Code */
    protected static final Field C4COMMONDETAIL = new Field(2 + 20, 2, "c4CommonDetail");

    /** Sets c4CommonDetail - from GVC or Reason Code
     *  @param c4CommonDetail from GVC or Reason Code
     */
    public void setC4CommonDetail(String c4CommonDetail) {
        setString(2 + 20, 2, c4CommonDetail);
    } // setC4CommonDetail

    /** Gets c4CommonDetail - from GVC or Reason Code
     *  @return from GVC or Reason Code
     */
    public String getC4CommonDetail() {
        return getString(2 + 20, 2);
    } // getC4CommonDetail
    //----------------
    /** Field c4OwnDetail - from GVC or Reason Code */
    protected static final Field C4OWNDETAIL = new Field(2 + 22, 3, "c4OwnDetail");

    /** Sets c4OwnDetail - from GVC or Reason Code
     *  @param c4OwnDetail from GVC or Reason Code
     */
    public void setC4OwnDetail(String c4OwnDetail) {
        setString(2 + 22, 3, c4OwnDetail);
    } // setC4OwnDetail

    /** Gets c4OwnDetail - from GVC or Reason Code
     *  @return from GVC or Reason Code
     */
    public String getC4OwnDetail() {
        return getString(2 + 22, 3);
    } // getC4OwnDetail
    //----------------
    /** Field c4KeyOwesOrToHave - sign: 1=Debit, 2=Credit */
    protected static final Field C4KEYOWESORTOHAVE = new Field(2 + 25, 1, "c4KeyOwesOrToHave");

    /** Sets c4KeyOwesOrToHave - sign: 1=Debit, 2=Credit
     *  @param c4KeyOwesOrToHave sign: 1=Debit, 2=Credit
     */
    public void setC4KeyOwesOrToHave(String c4KeyOwesOrToHave) {
        setString(2 + 25, 1, c4KeyOwesOrToHave);
    } // setC4KeyOwesOrToHave

    /** Gets c4KeyOwesOrToHave - sign: 1=Debit, 2=Credit
     *  @return sign: 1=Debit, 2=Credit
     */
    public String getC4KeyOwesOrToHave() {
        return getString(2 + 25, 1);
    } // getC4KeyOwesOrToHave
    //----------------
    /** Field c4Value - amount (2 decimal places) */
    protected static final Field C4VALUE = new Field(2 + 26, 14, "c4Value");

    /** Sets c4Value - amount (2 decimal places)
     *  @param c4Value amount (2 decimal places)
     */
    public void setC4Value(long c4Value) {
        setNumber(2 + 26, 14, c4Value);
    } // setC4Value

    /** Gets c4Value - amount (2 decimal places)
     *  @return amount (2 decimal places)
     */
    public long getC4Value() {
        return getNumber(2 + 26, 14);
    } // getC4Value
    //----------------
    /** Field c4Reference1 - numeric ref. with check digit */
    protected static final Field C4REFERENCE1 = new Field(2 + 40, 10, "c4Reference1");

    /** Sets c4Reference1 - numeric ref. with check digit
     *  @param c4Reference1 numeric ref. with check digit
     */
    public void setC4Reference1(String c4Reference1) {
        setString(2 + 40, 10, c4Reference1);
    } // setC4Reference1

    /** Gets c4Reference1 - numeric ref. with check digit
     *  @return numeric ref. with check digit
     */
    public String getC4Reference1() {
        return getString(2 + 40, 10);
    } // getC4Reference1
    //----------------
    /** Field c4Reference2 - alphanumeric ref. */
    protected static final Field C4REFERENCE2 = new Field(2 + 50, 16, "c4Reference2");

    /** Sets c4Reference2 - alphanumeric ref.
     *  @param c4Reference2 alphanumeric ref.
     */
    public void setC4Reference2(String c4Reference2) {
        setString(2 + 50, 16, c4Reference2);
    } // setC4Reference2

    /** Gets c4Reference2 - alphanumeric ref.
     *  @return alphanumeric ref.
     */
    public String getC4Reference2() {
        return getString(2 + 50, 16);
    } // getC4Reference2
    //----------------
    /** Field c4NofOfDocument - spaces */
    protected static final Field C4NOFOFDOCUMENT = new Field(2 + 66, 12, "c4NofOfDocument");

    /** Sets c4NofOfDocument - spaces
     *  @param c4NofOfDocument spaces
     */
    public void setC4NofOfDocument(String c4NofOfDocument) {
        setString(2 + 66, 12, c4NofOfDocument);
    } // setC4NofOfDocument

    /** Gets c4NofOfDocument - spaces
     *  @return spaces
     */
    public String getC4NofOfDocument() {
        return getString(2 + 66, 12);
    } // getC4NofOfDocument
    //----------------
    /** Field c7CdBanque - M bank code */
    protected static final Field C7CDBANQUE = new Field(2 + 0, 5, "c7CdBanque");

    /** Sets c7CdBanque - M bank code
     *  @param c7CdBanque M bank code
     */
    public void setC7CdBanque(String c7CdBanque) {
        setString(2 + 0, 5, c7CdBanque);
    } // setC7CdBanque

    /** Gets c7CdBanque - M bank code
     *  @return M bank code
     */
    public String getC7CdBanque() {
        return getString(2 + 0, 5);
    } // getC7CdBanque
    //----------------
    /** Field c7Reserve1 - X */
    protected static final Field C7RESERVE1 = new Field(2 + 5, 4, "c7Reserve1");

    /** Sets c7Reserve1 - X
     *  @param c7Reserve1 X
     */
    public void setC7Reserve1(String c7Reserve1) {
        setString(2 + 5, 4, c7Reserve1);
    } // setC7Reserve1

    /** Gets c7Reserve1 - X
     *  @return X
     */
    public String getC7Reserve1() {
        return getString(2 + 5, 4);
    } // getC7Reserve1
    //----------------
    /** Field c7CdGuichet - M branch */
    protected static final Field C7CDGUICHET = new Field(2 + 9, 5, "c7CdGuichet");

    /** Sets c7CdGuichet - M branch
     *  @param c7CdGuichet M branch
     */
    public void setC7CdGuichet(String c7CdGuichet) {
        setString(2 + 9, 5, c7CdGuichet);
    } // setC7CdGuichet

    /** Gets c7CdGuichet - M branch
     *  @return M branch
     */
    public String getC7CdGuichet() {
        return getString(2 + 9, 5);
    } // getC7CdGuichet
    //----------------
    /** Field c7CdDevise - O currency code ISO 4217 */
    protected static final Field C7CDDEVISE = new Field(2 + 14, 3, "c7CdDevise");

    /** Sets c7CdDevise - O currency code ISO 4217
     *  @param c7CdDevise O currency code ISO 4217
     */
    public void setC7CdDevise(String c7CdDevise) {
        setString(2 + 14, 3, c7CdDevise);
    } // setC7CdDevise

    /** Gets c7CdDevise - O currency code ISO 4217
     *  @return O currency code ISO 4217
     */
    public String getC7CdDevise() {
        return getString(2 + 14, 3);
    } // getC7CdDevise
    //----------------
    /** Field c7NoChiffres - D apres la virgule du montant */
    protected static final Field C7NOCHIFFRES = new Field(2 + 17, 1, "c7NoChiffres");

    /** Sets c7NoChiffres - D apres la virgule du montant
     *  @param c7NoChiffres D apres la virgule du montant
     */
    public void setC7NoChiffres(long c7NoChiffres) {
        setNumber(2 + 17, 1, c7NoChiffres);
    } // setC7NoChiffres

    /** Gets c7NoChiffres - D apres la virgule du montant
     *  @return D apres la virgule du montant
     */
    public long getC7NoChiffres() {
        return getNumber(2 + 17, 1);
    } // getC7NoChiffres
    //----------------
    /** Field c7Reserve2 - X */
    protected static final Field C7RESERVE2 = new Field(2 + 18, 1, "c7Reserve2");

    /** Sets c7Reserve2 - X
     *  @param c7Reserve2 X
     */
    public void setC7Reserve2(String c7Reserve2) {
        setString(2 + 18, 1, c7Reserve2);
    } // setC7Reserve2

    /** Gets c7Reserve2 - X
     *  @return X
     */
    public String getC7Reserve2() {
        return getString(2 + 18, 1);
    } // getC7Reserve2
    //----------------
    /** Field c7NoCompte - M */
    protected static final Field C7NOCOMPTE = new Field(2 + 19, 11, "c7NoCompte");

    /** Sets c7NoCompte - M
     *  @param c7NoCompte M
     */
    public void setC7NoCompte(String c7NoCompte) {
        setString(2 + 19, 11, c7NoCompte);
    } // setC7NoCompte

    /** Gets c7NoCompte - M
     *  @return M
     */
    public String getC7NoCompte() {
        return getString(2 + 19, 11);
    } // getC7NoCompte
    //----------------
    /** Field c7Reserve3 - X */
    protected static final Field C7RESERVE3 = new Field(2 + 30, 2, "c7Reserve3");

    /** Sets c7Reserve3 - X
     *  @param c7Reserve3 X
     */
    public void setC7Reserve3(String c7Reserve3) {
        setString(2 + 30, 2, c7Reserve3);
    } // setC7Reserve3

    /** Gets c7Reserve3 - X
     *  @return X
     */
    public String getC7Reserve3() {
        return getString(2 + 30, 2);
    } // getC7Reserve3
    //----------------
    /** Field c7DateSolde - M YYMMDD */
    protected static final Field C7DATESOLDE = new Field(2 + 32, 6, "c7DateSolde");

    /** Sets c7DateSolde - M YYMMDD
     *  @param c7DateSolde M YYMMDD
     */
    public void setC7DateSolde(long c7DateSolde) {
        setNumber(2 + 32, 6, c7DateSolde);
    } // setC7DateSolde

    /** Gets c7DateSolde - M YYMMDD
     *  @return M YYMMDD
     */
    public long getC7DateSolde() {
        return getNumber(2 + 32, 6);
    } // getC7DateSolde
    //----------------
    /** Field c7Reserve4 - X */
    protected static final Field C7RESERVE4 = new Field(2 + 38, 50, "c7Reserve4");

    /** Sets c7Reserve4 - X
     *  @param c7Reserve4 X
     */
    public void setC7Reserve4(String c7Reserve4) {
        setString(2 + 38, 50, c7Reserve4);
    } // setC7Reserve4

    /** Gets c7Reserve4 - X
     *  @return X
     */
    public String getC7Reserve4() {
        return getString(2 + 38, 50);
    } // getC7Reserve4
    //----------------
    /** Field c7MontantSolde - M nouveau */
    protected static final Field C7MONTANTSOLDE = new Field(2 + 88, 14, "c7MontantSolde");

    /** Sets c7MontantSolde - M nouveau
     *  @param c7MontantSolde M nouveau
     */
    public void setC7MontantSolde(long c7MontantSolde) {
        setNumber(2 + 88, 14, c7MontantSolde);
    } // setC7MontantSolde

    /** Gets c7MontantSolde - M nouveau
     *  @return M nouveau
     */
    public long getC7MontantSolde() {
        return getNumber(2 + 88, 14);
    } // getC7MontantSolde
    //----------------
    /** Field c7Reserve5 - X */
    protected static final Field C7RESERVE5 = new Field(2 + 102, 16, "c7Reserve5");

    /** Sets c7Reserve5 - X
     *  @param c7Reserve5 X
     */
    public void setC7Reserve5(String c7Reserve5) {
        setString(2 + 102, 16, c7Reserve5);
    } // setC7Reserve5

    /** Gets c7Reserve5 - X
     *  @return X
     */
    public String getC7Reserve5() {
        return getString(2 + 102, 16);
    } // getC7Reserve5
    //----------------

    /** Gets an XML tag for the record
     *  @param namespace namespace for the generated XML tag with colon, or empty
     *  @return an XML element for a CODA record
     */
    public String getXMLTag(String namespace) {
        return namespace + "CODA";
    } // getXMLTag

    /** Fires several SAX events for the record
     *  @param generator transformer with SAX event firing  methods
     */
    public void fireElements(BaseTransformer generator) {
        String localName = "";
        AttributesImpl attrs = null;
        attrs = new AttributesImpl();
                attrs.addAttribute("", "cdEnreg", "cdEnreg"  , "CDATA", replaceAttrText(getCdEnreg()));
        generator.fireStartElement("CODA", attrs);
        if (false) {
        } else if (getCdEnreg().equals("01")) {
            attrs = new AttributesImpl();
                attrs.addAttribute("", "c1CdBanque", "c1CdBanque", "CDATA", replaceAttrText(getC1CdBanque()));
                attrs.addAttribute("", "c1Reserve1", "c1Reserve1", "CDATA", replaceAttrText(getC1Reserve1()));
                attrs.addAttribute("", "c1CdGuichet", "c1CdGuichet", "CDATA", replaceAttrText(getC1CdGuichet()));
                attrs.addAttribute("", "c1CdDevise", "c1CdDevise", "CDATA", replaceAttrText(getC1CdDevise()));
                attrs.addAttribute("", "c1NoChiffres", "c1NoChiffres", "CDATA", Long.toString(getC1NoChiffres()));
                attrs.addAttribute("", "c1Reserve2", "c1Reserve2", "CDATA", replaceAttrText(getC1Reserve2()));
                attrs.addAttribute("", "c1NoCompte", "c1NoCompte", "CDATA", replaceAttrText(getC1NoCompte()));
                attrs.addAttribute("", "c1Reserve3", "c1Reserve3", "CDATA", replaceAttrText(getC1Reserve3()));
                attrs.addAttribute("", "c1DateSolde", "c1DateSolde", "CDATA", Long.toString(getC1DateSolde()));
                attrs.addAttribute("", "c1Reserve4", "c1Reserve4", "CDATA", replaceAttrText(getC1Reserve4()));
                attrs.addAttribute("", "c1MontantSolde", "c1MontantSolde", "CDATA", Long.toString(getC1MontantSolde()));
                attrs.addAttribute("", "c1Reserve5", "c1Reserve5", "CDATA", replaceAttrText(getC1Reserve5()));
            generator.fireEmptyElement("c1", attrs);
        } else if (getCdEnreg().equals("22")) {
            attrs = new AttributesImpl();
                attrs.addAttribute("", "c4Filler", "c4Filler", "CDATA", replaceAttrText(getC4Filler()));
                attrs.addAttribute("", "c4KeyOfOfficeOrigin", "c4KeyOfOfficeOrigin", "CDATA", replaceAttrText(getC4KeyOfOfficeOrigin()));
                attrs.addAttribute("", "c4DateOperation", "c4DateOperation", "CDATA", replaceAttrText(getC4DateOperation()));
                attrs.addAttribute("", "c4DateValue", "c4DateValue", "CDATA", replaceAttrText(getC4DateValue()));
                attrs.addAttribute("", "c4CommonDetail", "c4CommonDetail", "CDATA", replaceAttrText(getC4CommonDetail()));
                attrs.addAttribute("", "c4OwnDetail", "c4OwnDetail", "CDATA", replaceAttrText(getC4OwnDetail()));
                attrs.addAttribute("", "c4KeyOwesOrToHave", "c4KeyOwesOrToHave", "CDATA", replaceAttrText(getC4KeyOwesOrToHave()));
                attrs.addAttribute("", "c4Value", "c4Value"  , "CDATA", Long.toString(getC4Value()));
                attrs.addAttribute("", "c4Reference1", "c4Reference1", "CDATA", replaceAttrText(getC4Reference1()));
                attrs.addAttribute("", "c4Reference2", "c4Reference2", "CDATA", replaceAttrText(getC4Reference2()));
                attrs.addAttribute("", "c4NofOfDocument", "c4NofOfDocument", "CDATA", replaceAttrText(getC4NofOfDocument()));
            generator.fireEmptyElement("c4", attrs);
        } else if (getCdEnreg().equals("01")) {
            attrs = new AttributesImpl();
                attrs.addAttribute("", "c7CdBanque", "c7CdBanque", "CDATA", replaceAttrText(getC7CdBanque()));
                attrs.addAttribute("", "c7Reserve1", "c7Reserve1", "CDATA", replaceAttrText(getC7Reserve1()));
                attrs.addAttribute("", "c7CdGuichet", "c7CdGuichet", "CDATA", replaceAttrText(getC7CdGuichet()));
                attrs.addAttribute("", "c7CdDevise", "c7CdDevise", "CDATA", replaceAttrText(getC7CdDevise()));
                attrs.addAttribute("", "c7NoChiffres", "c7NoChiffres", "CDATA", Long.toString(getC7NoChiffres()));
                attrs.addAttribute("", "c7Reserve2", "c7Reserve2", "CDATA", replaceAttrText(getC7Reserve2()));
                attrs.addAttribute("", "c7NoCompte", "c7NoCompte", "CDATA", replaceAttrText(getC7NoCompte()));
                attrs.addAttribute("", "c7Reserve3", "c7Reserve3", "CDATA", replaceAttrText(getC7Reserve3()));
                attrs.addAttribute("", "c7DateSolde", "c7DateSolde", "CDATA", Long.toString(getC7DateSolde()));
                attrs.addAttribute("", "c7Reserve4", "c7Reserve4", "CDATA", replaceAttrText(getC7Reserve4()));
                attrs.addAttribute("", "c7MontantSolde", "c7MontantSolde", "CDATA", Long.toString(getC7MontantSolde()));
                attrs.addAttribute("", "c7Reserve5", "c7Reserve5", "CDATA", replaceAttrText(getC7Reserve5()));
            generator.fireEmptyElement("c7", attrs);
        }
        generator.fireEndElement("CODA");
    } // fireElements

    /** Receive notification of the start of an element.
     *  Looks for the element which contains encoded strings.
     *  @param uri The Namespace URI, or the empty string if the element has no Namespace URI
     *  or if Namespace processing is not being performed.
     *  @param localName the local name (without prefix),
     *  or the empty string if Namespace processing is not being performed.
     *  @param qName the qualified name (with prefix),
     *  or the empty string if qualified names are not available.
     *  @param attrs the attributes attached to the element.
     *  If there are no attributes, it shall be an empty Attributes object.
     *  @throws SAXException for SAX errors
     */
    public void startElement(String uri, String localName, String qName, Attributes attrs) throws SAXException {
        try {
            if (false) {
            } else if (qName.equals("CODA")) {
                setCdEnreg         (attrs.getValue("cdEnreg"));
            } else if (qName.equals("c1")) {
                setC1CdBanque      (attrs.getValue("c1CdBanque"));
                setC1Reserve1      (attrs.getValue("c1Reserve1"));
                setC1CdGuichet     (attrs.getValue("c1CdGuichet"));
                setC1CdDevise      (attrs.getValue("c1CdDevise"));
                setC1NoChiffres    (Long.parseLong(attrs.getValue("c1NoChiffres")));
                setC1Reserve2      (attrs.getValue("c1Reserve2"));
                setC1NoCompte      (attrs.getValue("c1NoCompte"));
                setC1Reserve3      (attrs.getValue("c1Reserve3"));
                setC1DateSolde     (Long.parseLong(attrs.getValue("c1DateSolde")));
                setC1Reserve4      (attrs.getValue("c1Reserve4"));
                setC1MontantSolde  (Long.parseLong(attrs.getValue("c1MontantSolde")));
                setC1Reserve5      (attrs.getValue("c1Reserve5"));
            } else if (qName.equals("c4")) {
                setC4Filler        (attrs.getValue("c4Filler"));
                setC4KeyOfOfficeOrigin             (attrs.getValue("c4KeyOfOfficeOrigin"));
                setC4DateOperation (attrs.getValue("c4DateOperation"));
                setC4DateValue     (attrs.getValue("c4DateValue"));
                setC4CommonDetail  (attrs.getValue("c4CommonDetail"));
                setC4OwnDetail     (attrs.getValue("c4OwnDetail"));
                setC4KeyOwesOrToHave               (attrs.getValue("c4KeyOwesOrToHave"));
                setC4Value         (Long.parseLong(attrs.getValue("c4Value")));
                setC4Reference1    (attrs.getValue("c4Reference1"));
                setC4Reference2    (attrs.getValue("c4Reference2"));
                setC4NofOfDocument (attrs.getValue("c4NofOfDocument"));
            } else if (qName.equals("c7")) {
                setC7CdBanque      (attrs.getValue("c7CdBanque"));
                setC7Reserve1      (attrs.getValue("c7Reserve1"));
                setC7CdGuichet     (attrs.getValue("c7CdGuichet"));
                setC7CdDevise      (attrs.getValue("c7CdDevise"));
                setC7NoChiffres    (Long.parseLong(attrs.getValue("c7NoChiffres")));
                setC7Reserve2      (attrs.getValue("c7Reserve2"));
                setC7NoCompte      (attrs.getValue("c7NoCompte"));
                setC7Reserve3      (attrs.getValue("c7Reserve3"));
                setC7DateSolde     (Long.parseLong(attrs.getValue("c7DateSolde")));
                setC7Reserve4      (attrs.getValue("c7Reserve4"));
                setC7MontantSolde  (Long.parseLong(attrs.getValue("c7MontantSolde")));
                setC7Reserve5      (attrs.getValue("c7Reserve5"));
            } else {
                // silently ignore other elements
            }
        } catch (Exception exc) {
            throw new SAXException("invalid attribute value ", exc);
        }
    } // startElement

} // class CODARecordBase
