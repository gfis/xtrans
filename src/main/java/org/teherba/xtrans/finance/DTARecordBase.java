/*  DTARecordBase.java - DTA MCV German Payments Exchange File
 *  @(#) $Id$
 *  Automatically generated by xtrans/web/xslt/genRecord.xsl at 2016-09-02T16:33:54+02:00
 *  DO NOT EDIT HERE - rather inherit from this class!
 */
package org.teherba.xtrans.finance;
import  org.teherba.xtrans.ByteRecord;
import  org.teherba.xtrans.BaseTransformer;
import  org.teherba.xtrans.Field;
import  java.sql.Date;
import  java.sql.Timestamp;
import  org.xml.sax.Attributes;
import  org.xml.sax.helpers.AttributesImpl;
import  org.xml.sax.SAXException;

/** DTA MCV German Payments Exchange File.
 *  total length 585 Bytes
 */
public class DTARecordBase extends ByteRecord {
    public static final int RECORD_LENGTH = 585;
    /** Source code version */
    public static final String CVSID = "@(#) $Id$";


    /** No-args Constructor for DTA MCV German Payments Exchange File.
     */
    public DTARecordBase() {
        super();
        setRecordTag("DTA");
    } // Constructor

    /** Field rlen - length of record */
    protected static final Field RLEN = new Field(0, 2, "rlen");

    /** Sets rlen - length of record
     *  @param rlen length of record
     */
    public void setRlen(long rlen) {
        setMSB(0, 2, rlen);
    } // setRlen

    /** Gets rlen - length of record
     *  @return length of record
     */
    public long getRlen() {
        return getMSB(0, 2);
    } // getRlen
    //----------------
    /** Field l0 - 2 zero bytes */
    protected static final Field L0 = new Field(2, 2, "l0");

    /** Sets l0 - 2 zero bytes
     *  @param l0 2 zero bytes
     */
    public void setL0(long l0) {
        setMSB(2, 2, l0);
    } // setL0

    /** Gets l0 - 2 zero bytes
     *  @return 2 zero bytes
     */
    public long getL0() {
        return getMSB(2, 2);
    } // getL0
    //----------------
    /** Field rtyp - A(header), C(tx) or E(sums) */
    protected static final Field RTYP = new Field(4, 1, "rtyp");

    /** Sets rtyp - A(header), C(tx) or E(sums)
     *  @param rtyp A(header), C(tx) or E(sums)
     */
    public void setRtyp(String rtyp) {
        setEBCDICString(4, 1, rtyp);
    } // setRtyp

    /** Gets rtyp - A(header), C(tx) or E(sums)
     *  @return A(header), C(tx) or E(sums)
     */
    public String getRtyp() {
        return getEBCDICString(4, 1);
    } // getRtyp
    //----------------
    /** Field A3 - Kennzeichen */
    protected static final Field A3 = new Field(5 + 0, 2, "A3");

    /** Sets A3 - Kennzeichen
     *  @param A3 Kennzeichen
     */
    public void setA3(String A3) {
        setEBCDICString(5 + 0, 2, A3);
    } // setA3

    /** Gets A3 - Kennzeichen
     *  @return Kennzeichen
     */
    public String getA3() {
        return getEBCDICString(5 + 0, 2);
    } // getA3
    //----------------
    /** Field A4 - BLZ Empfaenger */
    protected static final Field A4 = new Field(5 + 2, 5, "A4");

    /** Sets A4 - BLZ Empfaenger
     *  @param A4 BLZ Empfaenger
     */
    public void setA4(String A4) {
        setDecimal(5 + 2, 5, A4);
    } // setA4

    /** Gets A4 - BLZ Empfaenger
     *  @return BLZ Empfaenger
     */
    public String getA4() {
        return getDecimal(5 + 2, 5);
    } // getA4
    //----------------
    /** Field A5 - BLZ Absender */
    protected static final Field A5 = new Field(5 + 7, 5, "A5");

    /** Sets A5 - BLZ Absender
     *  @param A5 BLZ Absender
     */
    public void setA5(String A5) {
        setDecimal(5 + 7, 5, A5);
    } // setA5

    /** Gets A5 - BLZ Absender
     *  @return BLZ Absender
     */
    public String getA5() {
        return getDecimal(5 + 7, 5);
    } // getA5
    //----------------
    /** Field A6 - Name */
    protected static final Field A6 = new Field(5 + 12, 27, "A6");

    /** Sets A6 - Name
     *  @param A6 Name
     */
    public void setA6(String A6) {
        setEBCDICString(5 + 12, 27, A6);
    } // setA6

    /** Gets A6 - Name
     *  @return Name
     */
    public String getA6() {
        return getEBCDICString(5 + 12, 27);
    } // getA6
    //----------------
    /** Field A7 - Dateierstellungsdatum TTMMJJ */
    protected static final Field A7 = new Field(5 + 39, 4, "A7");

    /** Sets A7 - Dateierstellungsdatum TTMMJJ
     *  @param A7 Dateierstellungsdatum TTMMJJ
     */
    public void setA7(String A7) {
        setDecimal(5 + 39, 4, A7);
    } // setA7

    /** Gets A7 - Dateierstellungsdatum TTMMJJ
     *  @return Dateierstellungsdatum TTMMJJ
     */
    public String getA7() {
        return getDecimal(5 + 39, 4);
    } // getA7
    //----------------
    /** Field A8 - Intern 1 */
    protected static final Field A8 = new Field(5 + 43, 4, "A8");

    /** Sets A8 - Intern 1
     *  @param A8 Intern 1
     */
    public void setA8(String A8) {
        setUnsignedDecimal(5 + 43, 4, A8);
    } // setA8

    /** Gets A8 - Intern 1
     *  @return Intern 1
     */
    public String getA8() {
        return getUnsignedDecimal(5 + 43, 4);
    } // getA8
    //----------------
    /** Field A9 - Kontonr */
    protected static final Field A9 = new Field(5 + 47, 6, "A9");

    /** Sets A9 - Kontonr
     *  @param A9 Kontonr
     */
    public void setA9(String A9) {
        setDecimal(5 + 47, 6, A9);
    } // setA9

    /** Gets A9 - Kontonr
     *  @return Kontonr
     */
    public String getA9() {
        return getDecimal(5 + 47, 6);
    } // getA9
    //----------------
    /** Field A10 - Referenz */
    protected static final Field A10 = new Field(5 + 53, 10, "A10");

    /** Sets A10 - Referenz
     *  @param A10 Referenz
     */
    public void setA10(String A10) {
        setEBCDICString(5 + 53, 10, A10);
    } // setA10

    /** Gets A10 - Referenz
     *  @return Referenz
     */
    public String getA10() {
        return getEBCDICString(5 + 53, 10);
    } // getA10
    //----------------
    /** Field A11a - Reserve 1 */
    protected static final Field A11A = new Field(5 + 63, 15, "A11a");

    /** Sets A11a - Reserve 1
     *  @param A11a Reserve 1
     */
    public void setA11a(String A11a) {
        setEBCDICString(5 + 63, 15, A11a);
    } // setA11a

    /** Gets A11a - Reserve 1
     *  @return Reserve 1
     */
    public String getA11a() {
        return getEBCDICString(5 + 63, 15);
    } // getA11a
    //----------------
    /** Field A11b - Ausfuehrungsdatum TTMMJJJJ */
    protected static final Field A11B = new Field(5 + 78, 8, "A11b");

    /** Sets A11b - Ausfuehrungsdatum TTMMJJJJ
     *  @param A11b Ausfuehrungsdatum TTMMJJJJ
     */
    public void setA11b(String A11b) {
        setEBCDICString(5 + 78, 8, A11b);
    } // setA11b

    /** Gets A11b - Ausfuehrungsdatum TTMMJJJJ
     *  @return Ausfuehrungsdatum TTMMJJJJ
     */
    public String getA11b() {
        return getEBCDICString(5 + 78, 8);
    } // getA11b
    //----------------
    /** Field A11c - Reserve 2 */
    protected static final Field A11C = new Field(5 + 86, 58, "A11c");

    /** Sets A11c - Reserve 2
     *  @param A11c Reserve 2
     */
    public void setA11c(String A11c) {
        setEBCDICString(5 + 86, 58, A11c);
    } // setA11c

    /** Gets A11c - Reserve 2
     *  @return Reserve 2
     */
    public String getA11c() {
        return getEBCDICString(5 + 86, 58);
    } // getA11c
    //----------------
    /** Field A12 - Waehrung EUR=1 */
    protected static final Field A12 = new Field(5 + 144, 1, "A12");

    /** Sets A12 - Waehrung EUR=1
     *  @param A12 Waehrung EUR=1
     */
    public void setA12(String A12) {
        setEBCDICString(5 + 144, 1, A12);
    } // setA12

    /** Gets A12 - Waehrung EUR=1
     *  @return Waehrung EUR=1
     */
    public String getA12() {
        return getEBCDICString(5 + 144, 1);
    } // getA12
    //----------------
    /** Field C3 - BLZ Erstbezogener */
    protected static final Field C3 = new Field(5 + 0, 5, "C3");

    /** Sets C3 - BLZ Erstbezogener
     *  @param C3 BLZ Erstbezogener
     */
    public void setC3(String C3) {
        setDecimal(5 + 0, 5, C3);
    } // setC3

    /** Gets C3 - BLZ Erstbezogener
     *  @return BLZ Erstbezogener
     */
    public String getC3() {
        return getDecimal(5 + 0, 5);
    } // getC3
    //----------------
    /** Field C4 - BLZ Endbeguenstigter */
    protected static final Field C4 = new Field(5 + 5, 5, "C4");

    /** Sets C4 - BLZ Endbeguenstigter
     *  @param C4 BLZ Endbeguenstigter
     */
    public void setC4(String C4) {
        setDecimal(5 + 5, 5, C4);
    } // setC4

    /** Gets C4 - BLZ Endbeguenstigter
     *  @return BLZ Endbeguenstigter
     */
    public String getC4() {
        return getDecimal(5 + 5, 5);
    } // getC4
    //----------------
    /** Field C5 - Kontonr */
    protected static final Field C5 = new Field(5 + 10, 6, "C5");

    /** Sets C5 - Kontonr
     *  @param C5 Kontonr
     */
    public void setC5(String C5) {
        setDecimal(5 + 10, 6, C5);
    } // setC5

    /** Gets C5 - Kontonr
     *  @return Kontonr
     */
    public String getC5() {
        return getDecimal(5 + 10, 6);
    } // getC5
    //----------------
    /** Field C6a - Interne Kundennummer */
    protected static final Field C6A = new Field(5 + 16, 6, "C6a");

    /** Sets C6a - Interne Kundennummer
     *  @param C6a Interne Kundennummer
     */
    public void setC6a(String C6a) {
        setUnsignedDecimal(5 + 16, 6, C6a);
    } // setC6a

    /** Gets C6a - Interne Kundennummer
     *  @return Interne Kundennummer
     */
    public String getC6a() {
        return getUnsignedDecimal(5 + 16, 6);
    } // getC6a
    //----------------
    /** Field C6b - Intern 2 */
    protected static final Field C6B = new Field(5 + 22, 7, "C6b");

    /** Sets C6b - Intern 2
     *  @param C6b Intern 2
     */
    public void setC6b(String C6b) {
        setDecimal(5 + 22, 7, C6b);
    } // setC6b

    /** Gets C6b - Intern 2
     *  @return Intern 2
     */
    public String getC6b() {
        return getDecimal(5 + 22, 7);
    } // getC6b
    //----------------
    /** Field C7a - Textschluessel */
    protected static final Field C7A = new Field(5 + 29, 1, "C7a");

    /** Sets C7a - Textschluessel
     *  @param C7a Textschluessel
     */
    public void setC7a(String C7a) {
        setUnsignedDecimal(5 + 29, 1, C7a);
    } // setC7a

    /** Gets C7a - Textschluessel
     *  @return Textschluessel
     */
    public String getC7a() {
        return getUnsignedDecimal(5 + 29, 1);
    } // getC7a
    //----------------
    /** Field C7b - Textschluessel-Ergaenzung */
    protected static final Field C7B = new Field(5 + 30, 2, "C7b");

    /** Sets C7b - Textschluessel-Ergaenzung
     *  @param C7b Textschluessel-Ergaenzung
     */
    public void setC7b(String C7b) {
        setDecimal(5 + 30, 2, C7b);
    } // setC7b

    /** Gets C7b - Textschluessel-Ergaenzung
     *  @return Textschluessel-Ergaenzung
     */
    public String getC7b() {
        return getDecimal(5 + 30, 2);
    } // getC7b
    //----------------
    /** Field C8 - Intern 3 */
    protected static final Field C8 = new Field(5 + 32, 1, "C8");

    /** Sets C8 - Intern 3
     *  @param C8 Intern 3
     */
    public void setC8(String C8) {
        setEBCDICString(5 + 32, 1, C8);
    } // setC8

    /** Gets C8 - Intern 3
     *  @return Intern 3
     */
    public String getC8() {
        return getEBCDICString(5 + 32, 1);
    } // getC8
    //----------------
    /** Field C9 - Reserve 3 */
    protected static final Field C9 = new Field(5 + 33, 6, "C9");

    /** Sets C9 - Reserve 3
     *  @param C9 Reserve 3
     */
    public void setC9(String C9) {
        setDecimal(5 + 33, 6, C9);
    } // setC9

    /** Gets C9 - Reserve 3
     *  @return Reserve 3
     */
    public String getC9() {
        return getDecimal(5 + 33, 6);
    } // getC9
    //----------------
    /** Field C10 - BLZ Erstbezogener */
    protected static final Field C10 = new Field(5 + 39, 5, "C10");

    /** Sets C10 - BLZ Erstbezogener
     *  @param C10 BLZ Erstbezogener
     */
    public void setC10(String C10) {
        setDecimal(5 + 39, 5, C10);
    } // setC10

    /** Gets C10 - BLZ Erstbezogener
     *  @return BLZ Erstbezogener
     */
    public String getC10() {
        return getDecimal(5 + 39, 5);
    } // getC10
    //----------------
    /** Field C11 - Kontonr */
    protected static final Field C11 = new Field(5 + 44, 6, "C11");

    /** Sets C11 - Kontonr
     *  @param C11 Kontonr
     */
    public void setC11(String C11) {
        setDecimal(5 + 44, 6, C11);
    } // setC11

    /** Gets C11 - Kontonr
     *  @return Kontonr
     */
    public String getC11() {
        return getDecimal(5 + 44, 6);
    } // getC11
    //----------------
    /** Field C12 - Betrag EUR */
    protected static final Field C12 = new Field(5 + 50, 6, "C12");

    /** Sets C12 - Betrag EUR
     *  @param C12 Betrag EUR
     */
    public void setC12(String C12) {
        setDecimal(5 + 50, 6, C12);
    } // setC12

    /** Gets C12 - Betrag EUR
     *  @return Betrag EUR
     */
    public String getC12() {
        return getDecimal(5 + 50, 6);
    } // getC12
    //----------------
    /** Field C13 - Intern 4 */
    protected static final Field C13 = new Field(5 + 56, 3, "C13");

    /** Sets C13 - Intern 4
     *  @param C13 Intern 4
     */
    public void setC13(String C13) {
        setEBCDICString(5 + 56, 3, C13);
    } // setC13

    /** Gets C13 - Intern 4
     *  @return Intern 4
     */
    public String getC13() {
        return getEBCDICString(5 + 56, 3);
    } // getC13
    //----------------
    /** Field C14 - Name Empfaenger */
    protected static final Field C14 = new Field(5 + 59, 27, "C14");

    /** Sets C14 - Name Empfaenger
     *  @param C14 Name Empfaenger
     */
    public void setC14(String C14) {
        setEBCDICString(5 + 59, 27, C14);
    } // setC14

    /** Gets C14 - Name Empfaenger
     *  @return Name Empfaenger
     */
    public String getC14() {
        return getEBCDICString(5 + 59, 27);
    } // getC14
    //----------------
    /** Field C15 - Name Auftraggeber */
    protected static final Field C15 = new Field(5 + 86, 27, "C15");

    /** Sets C15 - Name Auftraggeber
     *  @param C15 Name Auftraggeber
     */
    public void setC15(String C15) {
        setEBCDICString(5 + 86, 27, C15);
    } // setC15

    /** Gets C15 - Name Auftraggeber
     *  @return Name Auftraggeber
     */
    public String getC15() {
        return getEBCDICString(5 + 86, 27);
    } // getC15
    //----------------
    /** Field C16 - Verwendungszweck */
    protected static final Field C16 = new Field(5 + 113, 27, "C16");

    /** Sets C16 - Verwendungszweck
     *  @param C16 Verwendungszweck
     */
    public void setC16(String C16) {
        setEBCDICString(5 + 113, 27, C16);
    } // setC16

    /** Gets C16 - Verwendungszweck
     *  @return Verwendungszweck
     */
    public String getC16() {
        return getEBCDICString(5 + 113, 27);
    } // getC16
    //----------------
    /** Field C17a - Waehrung EUR=1 */
    protected static final Field C17A = new Field(5 + 140, 1, "C17a");

    /** Sets C17a - Waehrung EUR=1
     *  @param C17a Waehrung EUR=1
     */
    public void setC17a(String C17a) {
        setEBCDICString(5 + 140, 1, C17a);
    } // setC17a

    /** Gets C17a - Waehrung EUR=1
     *  @return Waehrung EUR=1
     */
    public String getC17a() {
        return getEBCDICString(5 + 140, 1);
    } // getC17a
    //----------------
    /** Field C17b - Reserve 4 */
    protected static final Field C17B = new Field(5 + 141, 2, "C17b");

    /** Sets C17b - Reserve 4
     *  @param C17b Reserve 4
     */
    public void setC17b(String C17b) {
        setEBCDICString(5 + 141, 2, C17b);
    } // setC17b

    /** Gets C17b - Reserve 4
     *  @return Reserve 4
     */
    public String getC17b() {
        return getEBCDICString(5 + 141, 2);
    } // getC17b
    //----------------
    /** Field C18 - Anzahl Erweiterungsteile */
    protected static final Field C18 = new Field(5 + 143, 2, "C18");

    /** Sets C18 - Anzahl Erweiterungsteile
     *  @param C18 Anzahl Erweiterungsteile
     */
    public void setC18(String C18) {
        setDecimal(5 + 143, 2, C18);
    } // setC18

    /** Gets C18 - Anzahl Erweiterungsteile
     *  @return Anzahl Erweiterungsteile
     */
    public String getC18() {
        return getDecimal(5 + 143, 2);
    } // getC18
    //----------------
    /** Field CE - Erweiterungsteile */
    protected static final Field CE = new Field(150, 29, "CE");

    /** Sets CE - Erweiterungsteile
     *  @param index index in array 
     *  @param CE Erweiterungsteile
     */
    public void setCE(int index, String CE) {
        setString(150 + 29 * index, 29, CE);
    } // setCE

    /** Gets CE - Erweiterungsteile
     *  @return Erweiterungsteile
     */
    public String getCE(int index) {
        return getString(150 + 29 * index, 29);
    } // getCE
    //----------------
    /** Field CE01 - Erweiterungskennzeichen */
    protected static final Field CE01 = new Field(150 + 0, 2, "CE01");

    /** Sets CE01 - Erweiterungskennzeichen
     *  @param index index in array 
     *  @param CE01 Erweiterungskennzeichen
     */
    public void setCE01(int index, String CE01) {
        setEBCDICString(150 + 0 + 29 * index, 2, CE01);
    } // setCE01

    /** Gets CE01 - Erweiterungskennzeichen
     *  @return Erweiterungskennzeichen
     */
    public String getCE01(int index) {
        return getEBCDICString(150 + 0 + 29 * index, 2);
    } // getCE01
    //----------------
    /** Field CE02 - Erweiterungstext */
    protected static final Field CE02 = new Field(150 + 2, 27, "CE02");

    /** Sets CE02 - Erweiterungstext
     *  @param index index in array 
     *  @param CE02 Erweiterungstext
     */
    public void setCE02(int index, String CE02) {
        setEBCDICString(150 + 2 + 29 * index, 27, CE02);
    } // setCE02

    /** Gets CE02 - Erweiterungstext
     *  @return Erweiterungstext
     */
    public String getCE02(int index) {
        return getEBCDICString(150 + 2 + 29 * index, 27);
    } // getCE02
    //----------------
    /** Field E3 - Reserve 5 */
    protected static final Field E3 = new Field(5 + 0, 5, "E3");

    /** Sets E3 - Reserve 5
     *  @param E3 Reserve 5
     */
    public void setE3(String E3) {
        setEBCDICString(5 + 0, 5, E3);
    } // setE3

    /** Gets E3 - Reserve 5
     *  @return Reserve 5
     */
    public String getE3() {
        return getEBCDICString(5 + 0, 5);
    } // getE3
    //----------------
    /** Field E4 - Anzahl C-Saetze */
    protected static final Field E4 = new Field(5 + 5, 4, "E4");

    /** Sets E4 - Anzahl C-Saetze
     *  @param E4 Anzahl C-Saetze
     */
    public void setE4(String E4) {
        setDecimal(5 + 5, 4, E4);
    } // setE4

    /** Gets E4 - Anzahl C-Saetze
     *  @return Anzahl C-Saetze
     */
    public String getE4() {
        return getDecimal(5 + 5, 4);
    } // getE4
    //----------------
    /** Field E5 - Reserve 6 */
    protected static final Field E5 = new Field(5 + 9, 7, "E5");

    /** Sets E5 - Reserve 6
     *  @param E5 Reserve 6
     */
    public void setE5(String E5) {
        setDecimal(5 + 9, 7, E5);
    } // setE5

    /** Gets E5 - Reserve 6
     *  @return Reserve 6
     */
    public String getE5() {
        return getDecimal(5 + 9, 7);
    } // getE5
    //----------------
    /** Field E6 - SummeKontonummern */
    protected static final Field E6 = new Field(5 + 16, 9, "E6");

    /** Sets E6 - SummeKontonummern
     *  @param E6 SummeKontonummern
     */
    public void setE6(String E6) {
        setDecimal(5 + 16, 9, E6);
    } // setE6

    /** Gets E6 - SummeKontonummern
     *  @return SummeKontonummern
     */
    public String getE6() {
        return getDecimal(5 + 16, 9);
    } // getE6
    //----------------
    /** Field E7 - SummeBankleitzahlen */
    protected static final Field E7 = new Field(5 + 25, 9, "E7");

    /** Sets E7 - SummeBankleitzahlen
     *  @param E7 SummeBankleitzahlen
     */
    public void setE7(String E7) {
        setDecimal(5 + 25, 9, E7);
    } // setE7

    /** Gets E7 - SummeBankleitzahlen
     *  @return SummeBankleitzahlen
     */
    public String getE7() {
        return getDecimal(5 + 25, 9);
    } // getE7
    //----------------
    /** Field E8 - SummeBetraege */
    protected static final Field E8 = new Field(5 + 34, 7, "E8");

    /** Sets E8 - SummeBetraege
     *  @param E8 SummeBetraege
     */
    public void setE8(String E8) {
        setDecimal(5 + 34, 7, E8);
    } // setE8

    /** Gets E8 - SummeBetraege
     *  @return SummeBetraege
     */
    public String getE8() {
        return getDecimal(5 + 34, 7);
    } // getE8
    //----------------
    /** Field E9 - Reserve 7 */
    protected static final Field E9 = new Field(5 + 41, 104, "E9");

    /** Sets E9 - Reserve 7
     *  @param E9 Reserve 7
     */
    public void setE9(String E9) {
        setEBCDICString(5 + 41, 104, E9);
    } // setE9

    /** Gets E9 - Reserve 7
     *  @return Reserve 7
     */
    public String getE9() {
        return getEBCDICString(5 + 41, 104);
    } // getE9
    //----------------

    /** Gets an XML tag for the record
     *  @param namespace namespace for the generated XML tag with colon, or empty
     *  @return an XML element for a DTA record
     */
    public String getXMLTag(String namespace) {
        return namespace + "DTA";
    } // getXMLTag

    /** Fires several SAX events for the record
     *  @param generator transformer with SAX event firing  methods
     */
    public void fireElements(BaseTransformer generator) {
        String localName = "";
        AttributesImpl attrs = null;
        attrs = new AttributesImpl();
                attrs.addAttribute("", "rlen", "rlen"        , "CDATA", Long.toString(getRlen()));
                attrs.addAttribute("", "l0", "l0"            , "CDATA", Long.toString(getL0()));
                attrs.addAttribute("", "rtyp", "rtyp"        , "CDATA", replaceAttrText(getRtyp()));
        generator.fireStartElement("DTA", attrs);
        if (false) {
        } else if (getRtyp().equals("A")) {
            attrs = new AttributesImpl();
                attrs.addAttribute("", "A3", "A3"            , "CDATA", replaceAttrText(getA3()));
                attrs.addAttribute("", "A4", "A4"            , "CDATA", replaceAttrText(getA4()));
                attrs.addAttribute("", "A5", "A5"            , "CDATA", replaceAttrText(getA5()));
                attrs.addAttribute("", "A6", "A6"            , "CDATA", replaceAttrText(getA6()));
                attrs.addAttribute("", "A7", "A7"            , "CDATA", replaceAttrText(getA7()));
                attrs.addAttribute("", "A8", "A8"            , "CDATA", replaceAttrText(getA8()));
                attrs.addAttribute("", "A9", "A9"            , "CDATA", replaceAttrText(getA9()));
                attrs.addAttribute("", "A10", "A10"          , "CDATA", replaceAttrText(getA10()));
                attrs.addAttribute("", "A11a", "A11a"        , "CDATA", replaceAttrText(getA11a()));
                attrs.addAttribute("", "A11b", "A11b"        , "CDATA", replaceAttrText(getA11b()));
                attrs.addAttribute("", "A11c", "A11c"        , "CDATA", replaceAttrText(getA11c()));
                attrs.addAttribute("", "A12", "A12"          , "CDATA", replaceAttrText(getA12()));
            generator.fireEmptyElement("A", attrs);
        } else if (getRtyp().equals("C")) {
            attrs = new AttributesImpl();
                attrs.addAttribute("", "C3", "C3"            , "CDATA", replaceAttrText(getC3()));
                attrs.addAttribute("", "C4", "C4"            , "CDATA", replaceAttrText(getC4()));
                attrs.addAttribute("", "C5", "C5"            , "CDATA", replaceAttrText(getC5()));
                attrs.addAttribute("", "C6a", "C6a"          , "CDATA", replaceAttrText(getC6a()));
                attrs.addAttribute("", "C6b", "C6b"          , "CDATA", replaceAttrText(getC6b()));
                attrs.addAttribute("", "C7a", "C7a"          , "CDATA", replaceAttrText(getC7a()));
                attrs.addAttribute("", "C7b", "C7b"          , "CDATA", replaceAttrText(getC7b()));
                attrs.addAttribute("", "C8", "C8"            , "CDATA", replaceAttrText(getC8()));
                attrs.addAttribute("", "C9", "C9"            , "CDATA", replaceAttrText(getC9()));
                attrs.addAttribute("", "C10", "C10"          , "CDATA", replaceAttrText(getC10()));
                attrs.addAttribute("", "C11", "C11"          , "CDATA", replaceAttrText(getC11()));
                attrs.addAttribute("", "C12", "C12"          , "CDATA", replaceAttrText(getC12()));
                attrs.addAttribute("", "C13", "C13"          , "CDATA", replaceAttrText(getC13()));
                attrs.addAttribute("", "C14", "C14"          , "CDATA", replaceAttrText(getC14()));
                attrs.addAttribute("", "C15", "C15"          , "CDATA", replaceAttrText(getC15()));
                attrs.addAttribute("", "C16", "C16"          , "CDATA", replaceAttrText(getC16()));
                attrs.addAttribute("", "C17a", "C17a"        , "CDATA", replaceAttrText(getC17a()));
                attrs.addAttribute("", "C17b", "C17b"        , "CDATA", replaceAttrText(getC17b()));
                attrs.addAttribute("", "C18", "C18"          , "CDATA", replaceAttrText(getC18()));
            generator.fireStartElement("C", attrs);
            int indexCE = 0;
            while (indexCE < Integer.parseInt(getC18())) {
                attrs = new AttributesImpl();
                attrs.addAttribute("", "index", "index", "CDATA", Integer.toString(indexCE));
                attrs.addAttribute("", "CE01", "CE01"        , "CDATA", replaceAttrText(getCE01(indexCE)));
                attrs.addAttribute("", "CE02", "CE02"        , "CDATA", replaceAttrText(getCE02(indexCE)));
                generator.fireEmptyElement("CE", attrs);
                indexCE ++;
            } // while
            generator.fireEndElement("C");
        } else if (getRtyp().equals("E")) {
            attrs = new AttributesImpl();
                attrs.addAttribute("", "E3", "E3"            , "CDATA", replaceAttrText(getE3()));
                attrs.addAttribute("", "E4", "E4"            , "CDATA", replaceAttrText(getE4()));
                attrs.addAttribute("", "E5", "E5"            , "CDATA", replaceAttrText(getE5()));
                attrs.addAttribute("", "E6", "E6"            , "CDATA", replaceAttrText(getE6()));
                attrs.addAttribute("", "E7", "E7"            , "CDATA", replaceAttrText(getE7()));
                attrs.addAttribute("", "E8", "E8"            , "CDATA", replaceAttrText(getE8()));
                attrs.addAttribute("", "E9", "E9"            , "CDATA", replaceAttrText(getE9()));
            generator.fireEmptyElement("E", attrs);
        }
        generator.fireEndElement("DTA");
    } // fireElements

    /** Receive notification of the start of an element.
     *  Looks for the element which contains encoded strings.
     *  @param uri The Namespace URI, or the empty string if the element has no Namespace URI
     *  or if Namespace processing is not being performed.
     *  @param localName the local name (without prefix),
     *  or the empty string if Namespace processing is not being performed.
     *  @param qName the qualified name (with prefix),
     *  or the empty string if qualified names are not available.
     *  @param attrs the attributes attached to the element.
     *  If there are no attributes, it shall be an empty Attributes object.
     *  @throws SAX Exception
     */
    public void startElement(String uri, String localName, String qName, Attributes attrs) throws SAXException {
        try {
            if (false) {
            } else if (qName.equals("DTA")) {
                setRlen            (Long.parseLong(attrs.getValue("rlen")));
                setL0              (Long.parseLong(attrs.getValue("l0")));
                setRtyp            (attrs.getValue("rtyp"));
            } else if (qName.equals("A")) {
                setA3              (attrs.getValue("A3"));
                setA4              (attrs.getValue("A4"));
                setA5              (attrs.getValue("A5"));
                setA6              (attrs.getValue("A6"));
                setA7              (attrs.getValue("A7"));
                setA8              (attrs.getValue("A8"));
                setA9              (attrs.getValue("A9"));
                setA10             (attrs.getValue("A10"));
                setA11a            (attrs.getValue("A11a"));
                setA11b            (attrs.getValue("A11b"));
                setA11c            (attrs.getValue("A11c"));
                setA12             (attrs.getValue("A12"));
            } else if (qName.equals("C")) {
                setC3              (attrs.getValue("C3"));
                setC4              (attrs.getValue("C4"));
                setC5              (attrs.getValue("C5"));
                setC6a             (attrs.getValue("C6a"));
                setC6b             (attrs.getValue("C6b"));
                setC7a             (attrs.getValue("C7a"));
                setC7b             (attrs.getValue("C7b"));
                setC8              (attrs.getValue("C8"));
                setC9              (attrs.getValue("C9"));
                setC10             (attrs.getValue("C10"));
                setC11             (attrs.getValue("C11"));
                setC12             (attrs.getValue("C12"));
                setC13             (attrs.getValue("C13"));
                setC14             (attrs.getValue("C14"));
                setC15             (attrs.getValue("C15"));
                setC16             (attrs.getValue("C16"));
                setC17a            (attrs.getValue("C17a"));
                setC17b            (attrs.getValue("C17b"));
                setC18             (attrs.getValue("C18"));
            } else if (qName.equals("E")) {
                setE3              (attrs.getValue("E3"));
                setE4              (attrs.getValue("E4"));
                setE5              (attrs.getValue("E5"));
                setE6              (attrs.getValue("E6"));
                setE7              (attrs.getValue("E7"));
                setE8              (attrs.getValue("E8"));
                setE9              (attrs.getValue("E9"));
            } else if (qName.equals("CE")) {
                setCE01            (Integer.parseInt(attrs.getValue("index")), attrs.getValue("CE01"));
                setCE02            (Integer.parseInt(attrs.getValue("index")), attrs.getValue("CE02"));
            } else {
                // silently ignore other elements
            }
        } catch (Exception exc) {
            throw new SAXException("invalid attribute value ", exc);
        }
    } // startElement

} // class DTARecordBase
