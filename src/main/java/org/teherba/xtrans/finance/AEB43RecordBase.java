/*  AEB43RecordBase.java - 
 *  @(#) $Id$
 *  Automatically generated by xtrans/web/xslt/genRecord.xsl at 2014-02-05T10:18:34+01:00
 *  DO NOT EDIT HERE - rather inherit from this class!
 */
package org.teherba.xtrans.finance;
import  org.teherba.xtrans.CharRecord;
import  org.teherba.xtrans.BaseTransformer;
import  org.teherba.xtrans.Field;
import  java.sql.Date;
import  java.sql.Timestamp;
import  org.xml.sax.Attributes;
import  org.xml.sax.helpers.AttributesImpl;
import  org.xml.sax.SAXException;

/** .
 *  total length 80 Chars
 */
public class AEB43RecordBase extends CharRecord {
    public static final int RECORD_LENGTH = 80;
    /** Source code version */
    public static final String CVSID = "@(#) $Id$";


    /** No-args Constructor for .
     */
    public AEB43RecordBase() {
        super();
        setRecordTag("AEB43");
    } // Constructor

    /** Field recordCode - id for the record */
    protected static final Field RECORDCODE = new Field(0, 2, "recordCode");

    /** Sets recordCode - id for the record
     *  @param recordCode id for the record
     */
    public void setRecordCode(String recordCode) {
        setString(0, 2, recordCode);
    } // setRecordCode

    /** Gets recordCode - id for the record
     *  @return id for the record
     */
    public String getRecordCode() {
        return getString(0, 2);
    } // getRecordCode
    //----------------
    /** Field caKeyOfBank - bank code */
    protected static final Field CAKEYOFBANK = new Field(2 + 0, 4, "caKeyOfBank");

    /** Sets caKeyOfBank - bank code
     *  @param caKeyOfBank bank code
     */
    public void setCaKeyOfBank(String caKeyOfBank) {
        setString(2 + 0, 4, caKeyOfBank);
    } // setCaKeyOfBank

    /** Gets caKeyOfBank - bank code
     *  @return bank code
     */
    public String getCaKeyOfBank() {
        return getString(2 + 0, 4);
    } // getCaKeyOfBank
    //----------------
    /** Field caKeyOfOffice - branch code */
    protected static final Field CAKEYOFOFFICE = new Field(2 + 4, 4, "caKeyOfOffice");

    /** Sets caKeyOfOffice - branch code
     *  @param caKeyOfOffice branch code
     */
    public void setCaKeyOfOffice(String caKeyOfOffice) {
        setString(2 + 4, 4, caKeyOfOffice);
    } // setCaKeyOfOffice

    /** Gets caKeyOfOffice - branch code
     *  @return branch code
     */
    public String getCaKeyOfOffice() {
        return getString(2 + 4, 4);
    } // getCaKeyOfOffice
    //----------------
    /** Field caAccountNo - first 10 */
    protected static final Field CAACCOUNTNO = new Field(2 + 8, 10, "caAccountNo");

    /** Sets caAccountNo - first 10
     *  @param caAccountNo first 10
     */
    public void setCaAccountNo(String caAccountNo) {
        setString(2 + 8, 10, caAccountNo);
    } // setCaAccountNo

    /** Gets caAccountNo - first 10
     *  @return first 10
     */
    public String getCaAccountNo() {
        return getString(2 + 8, 10);
    } // getCaAccountNo
    //----------------
    /** Field caInitialDate - YYMMDD */
    protected static final Field CAINITIALDATE = new Field(2 + 18, 6, "caInitialDate");

    /** Sets caInitialDate - YYMMDD
     *  @param caInitialDate YYMMDD
     */
    public void setCaInitialDate(String caInitialDate) {
        setString(2 + 18, 6, caInitialDate);
    } // setCaInitialDate

    /** Gets caInitialDate - YYMMDD
     *  @return YYMMDD
     */
    public String getCaInitialDate() {
        return getString(2 + 18, 6);
    } // getCaInitialDate
    //----------------
    /** Field caFinalDate - YYMMDD */
    protected static final Field CAFINALDATE = new Field(2 + 24, 6, "caFinalDate");

    /** Sets caFinalDate - YYMMDD
     *  @param caFinalDate YYMMDD
     */
    public void setCaFinalDate(String caFinalDate) {
        setString(2 + 24, 6, caFinalDate);
    } // setCaFinalDate

    /** Gets caFinalDate - YYMMDD
     *  @return YYMMDD
     */
    public String getCaFinalDate() {
        return getString(2 + 24, 6);
    } // getCaFinalDate
    //----------------
    /** Field caKeyOwesOrToHave - sign: 1=Debit, 2=Credit */
    protected static final Field CAKEYOWESORTOHAVE = new Field(2 + 30, 1, "caKeyOwesOrToHave");

    /** Sets caKeyOwesOrToHave - sign: 1=Debit, 2=Credit
     *  @param caKeyOwesOrToHave sign: 1=Debit, 2=Credit
     */
    public void setCaKeyOwesOrToHave(String caKeyOwesOrToHave) {
        setString(2 + 30, 1, caKeyOwesOrToHave);
    } // setCaKeyOwesOrToHave

    /** Gets caKeyOwesOrToHave - sign: 1=Debit, 2=Credit
     *  @return sign: 1=Debit, 2=Credit
     */
    public String getCaKeyOwesOrToHave() {
        return getString(2 + 30, 1);
    } // getCaKeyOwesOrToHave
    //----------------
    /** Field caOpeningBalance - amount (2 decimal places) */
    protected static final Field CAOPENINGBALANCE = new Field(2 + 31, 14, "caOpeningBalance");

    /** Sets caOpeningBalance - amount (2 decimal places)
     *  @param caOpeningBalance amount (2 decimal places)
     */
    public void setCaOpeningBalance(long caOpeningBalance) {
        setNumber(2 + 31, 14, caOpeningBalance);
    } // setCaOpeningBalance

    /** Gets caOpeningBalance - amount (2 decimal places)
     *  @return amount (2 decimal places)
     */
    public long getCaOpeningBalance() {
        return getNumber(2 + 31, 14);
    } // getCaOpeningBalance
    //----------------
    /** Field caCurrencyCode - numeric currency, EUR=978 */
    protected static final Field CACURRENCYCODE = new Field(2 + 45, 3, "caCurrencyCode");

    /** Sets caCurrencyCode - numeric currency, EUR=978
     *  @param caCurrencyCode numeric currency, EUR=978
     */
    public void setCaCurrencyCode(String caCurrencyCode) {
        setString(2 + 45, 3, caCurrencyCode);
    } // setCaCurrencyCode

    /** Gets caCurrencyCode - numeric currency, EUR=978
     *  @return numeric currency, EUR=978
     */
    public String getCaCurrencyCode() {
        return getString(2 + 45, 3);
    } // getCaCurrencyCode
    //----------------
    /** Field caModalityOfInformation - blanks, or from customer database */
    protected static final Field CAMODALITYOFINFORMATION = new Field(2 + 48, 1, "caModalityOfInformation");

    /** Sets caModalityOfInformation - blanks, or from customer database
     *  @param caModalityOfInformation blanks, or from customer database
     */
    public void setCaModalityOfInformation(String caModalityOfInformation) {
        setString(2 + 48, 1, caModalityOfInformation);
    } // setCaModalityOfInformation

    /** Gets caModalityOfInformation - blanks, or from customer database
     *  @return blanks, or from customer database
     */
    public String getCaModalityOfInformation() {
        return getString(2 + 48, 1);
    } // getCaModalityOfInformation
    //----------------
    /** Field caShortName - name of customer */
    protected static final Field CASHORTNAME = new Field(2 + 49, 26, "caShortName");

    /** Sets caShortName - name of customer
     *  @param caShortName name of customer
     */
    public void setCaShortName(String caShortName) {
        setString(2 + 49, 26, caShortName);
    } // setCaShortName

    /** Gets caShortName - name of customer
     *  @return name of customer
     */
    public String getCaShortName() {
        return getString(2 + 49, 26);
    } // getCaShortName
    //----------------
    /** Field caFiller - blank blank I */
    protected static final Field CAFILLER = new Field(2 + 75, 3, "caFiller");

    /** Sets caFiller - blank blank I
     *  @param caFiller blank blank I
     */
    public void setCaFiller(String caFiller) {
        setString(2 + 75, 3, caFiller);
    } // setCaFiller

    /** Gets caFiller - blank blank I
     *  @return blank blank I
     */
    public String getCaFiller() {
        return getString(2 + 75, 3);
    } // getCaFiller
    //----------------
    /** Field pmFiller - empty */
    protected static final Field PMFILLER = new Field(2 + 0, 4, "pmFiller");

    /** Sets pmFiller - empty
     *  @param pmFiller empty
     */
    public void setPmFiller(String pmFiller) {
        setString(2 + 0, 4, pmFiller);
    } // setPmFiller

    /** Gets pmFiller - empty
     *  @return empty
     */
    public String getPmFiller() {
        return getString(2 + 0, 4);
    } // getPmFiller
    //----------------
    /** Field pmKeyOfOfficeOrigin - branch of origin */
    protected static final Field PMKEYOFOFFICEORIGIN = new Field(2 + 4, 4, "pmKeyOfOfficeOrigin");

    /** Sets pmKeyOfOfficeOrigin - branch of origin
     *  @param pmKeyOfOfficeOrigin branch of origin
     */
    public void setPmKeyOfOfficeOrigin(String pmKeyOfOfficeOrigin) {
        setString(2 + 4, 4, pmKeyOfOfficeOrigin);
    } // setPmKeyOfOfficeOrigin

    /** Gets pmKeyOfOfficeOrigin - branch of origin
     *  @return branch of origin
     */
    public String getPmKeyOfOfficeOrigin() {
        return getString(2 + 4, 4);
    } // getPmKeyOfOfficeOrigin
    //----------------
    /** Field pmDateOperation - YYMMDD booking date */
    protected static final Field PMDATEOPERATION = new Field(2 + 8, 6, "pmDateOperation");

    /** Sets pmDateOperation - YYMMDD booking date
     *  @param pmDateOperation YYMMDD booking date
     */
    public void setPmDateOperation(String pmDateOperation) {
        setString(2 + 8, 6, pmDateOperation);
    } // setPmDateOperation

    /** Gets pmDateOperation - YYMMDD booking date
     *  @return YYMMDD booking date
     */
    public String getPmDateOperation() {
        return getString(2 + 8, 6);
    } // getPmDateOperation
    //----------------
    /** Field pmDateValue - YYMMDD value date */
    protected static final Field PMDATEVALUE = new Field(2 + 14, 6, "pmDateValue");

    /** Sets pmDateValue - YYMMDD value date
     *  @param pmDateValue YYMMDD value date
     */
    public void setPmDateValue(String pmDateValue) {
        setString(2 + 14, 6, pmDateValue);
    } // setPmDateValue

    /** Gets pmDateValue - YYMMDD value date
     *  @return YYMMDD value date
     */
    public String getPmDateValue() {
        return getString(2 + 14, 6);
    } // getPmDateValue
    //----------------
    /** Field pmCommonDetail - from GVC or Reason Code */
    protected static final Field PMCOMMONDETAIL = new Field(2 + 20, 2, "pmCommonDetail");

    /** Sets pmCommonDetail - from GVC or Reason Code
     *  @param pmCommonDetail from GVC or Reason Code
     */
    public void setPmCommonDetail(String pmCommonDetail) {
        setString(2 + 20, 2, pmCommonDetail);
    } // setPmCommonDetail

    /** Gets pmCommonDetail - from GVC or Reason Code
     *  @return from GVC or Reason Code
     */
    public String getPmCommonDetail() {
        return getString(2 + 20, 2);
    } // getPmCommonDetail
    //----------------
    /** Field pmOwnDetail - from GVC or Reason Code */
    protected static final Field PMOWNDETAIL = new Field(2 + 22, 3, "pmOwnDetail");

    /** Sets pmOwnDetail - from GVC or Reason Code
     *  @param pmOwnDetail from GVC or Reason Code
     */
    public void setPmOwnDetail(String pmOwnDetail) {
        setString(2 + 22, 3, pmOwnDetail);
    } // setPmOwnDetail

    /** Gets pmOwnDetail - from GVC or Reason Code
     *  @return from GVC or Reason Code
     */
    public String getPmOwnDetail() {
        return getString(2 + 22, 3);
    } // getPmOwnDetail
    //----------------
    /** Field pmKeyOwesOrToHave - sign: 1=Debit, 2=Credit */
    protected static final Field PMKEYOWESORTOHAVE = new Field(2 + 25, 1, "pmKeyOwesOrToHave");

    /** Sets pmKeyOwesOrToHave - sign: 1=Debit, 2=Credit
     *  @param pmKeyOwesOrToHave sign: 1=Debit, 2=Credit
     */
    public void setPmKeyOwesOrToHave(String pmKeyOwesOrToHave) {
        setString(2 + 25, 1, pmKeyOwesOrToHave);
    } // setPmKeyOwesOrToHave

    /** Gets pmKeyOwesOrToHave - sign: 1=Debit, 2=Credit
     *  @return sign: 1=Debit, 2=Credit
     */
    public String getPmKeyOwesOrToHave() {
        return getString(2 + 25, 1);
    } // getPmKeyOwesOrToHave
    //----------------
    /** Field pmValue - amount (2 decimal places) */
    protected static final Field PMVALUE = new Field(2 + 26, 14, "pmValue");

    /** Sets pmValue - amount (2 decimal places)
     *  @param pmValue amount (2 decimal places)
     */
    public void setPmValue(long pmValue) {
        setNumber(2 + 26, 14, pmValue);
    } // setPmValue

    /** Gets pmValue - amount (2 decimal places)
     *  @return amount (2 decimal places)
     */
    public long getPmValue() {
        return getNumber(2 + 26, 14);
    } // getPmValue
    //----------------
    /** Field pmReference1 - numeric ref. with check digit */
    protected static final Field PMREFERENCE1 = new Field(2 + 40, 10, "pmReference1");

    /** Sets pmReference1 - numeric ref. with check digit
     *  @param pmReference1 numeric ref. with check digit
     */
    public void setPmReference1(String pmReference1) {
        setString(2 + 40, 10, pmReference1);
    } // setPmReference1

    /** Gets pmReference1 - numeric ref. with check digit
     *  @return numeric ref. with check digit
     */
    public String getPmReference1() {
        return getString(2 + 40, 10);
    } // getPmReference1
    //----------------
    /** Field pmReference2 - alphanumeric ref. */
    protected static final Field PMREFERENCE2 = new Field(2 + 50, 16, "pmReference2");

    /** Sets pmReference2 - alphanumeric ref.
     *  @param pmReference2 alphanumeric ref.
     */
    public void setPmReference2(String pmReference2) {
        setString(2 + 50, 16, pmReference2);
    } // setPmReference2

    /** Gets pmReference2 - alphanumeric ref.
     *  @return alphanumeric ref.
     */
    public String getPmReference2() {
        return getString(2 + 50, 16);
    } // getPmReference2
    //----------------
    /** Field pmNofOfDocument - spaces */
    protected static final Field PMNOFOFDOCUMENT = new Field(2 + 66, 12, "pmNofOfDocument");

    /** Sets pmNofOfDocument - spaces
     *  @param pmNofOfDocument spaces
     */
    public void setPmNofOfDocument(String pmNofOfDocument) {
        setString(2 + 66, 12, pmNofOfDocument);
    } // setPmNofOfDocument

    /** Gets pmNofOfDocument - spaces
     *  @return spaces
     */
    public String getPmNofOfDocument() {
        return getString(2 + 66, 12);
    } // getPmNofOfDocument
    //----------------
    /** Field cdDataCode - 01, 02, 03, 04, 05 */
    protected static final Field CDDATACODE = new Field(2 + 0, 2, "cdDataCode");

    /** Sets cdDataCode - 01, 02, 03, 04, 05
     *  @param cdDataCode 01, 02, 03, 04, 05
     */
    public void setCdDataCode(long cdDataCode) {
        setNumber(2 + 0, 2, cdDataCode);
    } // setCdDataCode

    /** Gets cdDataCode - 01, 02, 03, 04, 05
     *  @return 01, 02, 03, 04, 05
     */
    public long getCdDataCode() {
        return getNumber(2 + 0, 2);
    } // getCdDataCode
    //----------------
    /** Field cdDetail1 - statement text */
    protected static final Field CDDETAIL1 = new Field(2 + 2, 75, "cdDetail1");

    /** Sets cdDetail1 - statement text
     *  @param cdDetail1 statement text
     */
    public void setCdDetail1(String cdDetail1) {
        setString(2 + 2, 75, cdDetail1);
    } // setCdDetail1

    /** Gets cdDetail1 - statement text
     *  @return statement text
     */
    public String getCdDetail1() {
        return getString(2 + 2, 75);
    } // getCdDetail1
    //----------------
    /** Field cdDetail2 - unused */
    protected static final Field CDDETAIL2 = new Field(2 + 77, 37, "cdDetail2");

    /** Sets cdDetail2 - unused
     *  @param cdDetail2 unused
     */
    public void setCdDetail2(String cdDetail2) {
        setString(2 + 77, 37, cdDetail2);
    } // setCdDetail2

    /** Gets cdDetail2 - unused
     *  @return unused
     */
    public String getCdDetail2() {
        return getString(2 + 77, 37);
    } // getCdDetail2
    //----------------
    /** Field faKeyOfBank - bank code */
    protected static final Field FAKEYOFBANK = new Field(2 + 0, 4, "faKeyOfBank");

    /** Sets faKeyOfBank - bank code
     *  @param faKeyOfBank bank code
     */
    public void setFaKeyOfBank(String faKeyOfBank) {
        setString(2 + 0, 4, faKeyOfBank);
    } // setFaKeyOfBank

    /** Gets faKeyOfBank - bank code
     *  @return bank code
     */
    public String getFaKeyOfBank() {
        return getString(2 + 0, 4);
    } // getFaKeyOfBank
    //----------------
    /** Field faKeyOfOffice - branch code */
    protected static final Field FAKEYOFOFFICE = new Field(2 + 4, 4, "faKeyOfOffice");

    /** Sets faKeyOfOffice - branch code
     *  @param faKeyOfOffice branch code
     */
    public void setFaKeyOfOffice(String faKeyOfOffice) {
        setString(2 + 4, 4, faKeyOfOffice);
    } // setFaKeyOfOffice

    /** Gets faKeyOfOffice - branch code
     *  @return branch code
     */
    public String getFaKeyOfOffice() {
        return getString(2 + 4, 4);
    } // getFaKeyOfOffice
    //----------------
    /** Field faAccountNo - account of customer */
    protected static final Field FAACCOUNTNO = new Field(2 + 8, 10, "faAccountNo");

    /** Sets faAccountNo - account of customer
     *  @param faAccountNo account of customer
     */
    public void setFaAccountNo(String faAccountNo) {
        setString(2 + 8, 10, faAccountNo);
    } // setFaAccountNo

    /** Gets faAccountNo - account of customer
     *  @return account of customer
     */
    public String getFaAccountNo() {
        return getString(2 + 8, 10);
    } // getFaAccountNo
    //----------------
    /** Field faNoOfDebitMovements - calculate sum */
    protected static final Field FANOOFDEBITMOVEMENTS = new Field(2 + 18, 5, "faNoOfDebitMovements");

    /** Sets faNoOfDebitMovements - calculate sum
     *  @param faNoOfDebitMovements calculate sum
     */
    public void setFaNoOfDebitMovements(long faNoOfDebitMovements) {
        setNumber(2 + 18, 5, faNoOfDebitMovements);
    } // setFaNoOfDebitMovements

    /** Gets faNoOfDebitMovements - calculate sum
     *  @return calculate sum
     */
    public long getFaNoOfDebitMovements() {
        return getNumber(2 + 18, 5);
    } // getFaNoOfDebitMovements
    //----------------
    /** Field faTotalOfDebitAmounts - calculate sum */
    protected static final Field FATOTALOFDEBITAMOUNTS = new Field(2 + 23, 14, "faTotalOfDebitAmounts");

    /** Sets faTotalOfDebitAmounts - calculate sum
     *  @param faTotalOfDebitAmounts calculate sum
     */
    public void setFaTotalOfDebitAmounts(long faTotalOfDebitAmounts) {
        setNumber(2 + 23, 14, faTotalOfDebitAmounts);
    } // setFaTotalOfDebitAmounts

    /** Gets faTotalOfDebitAmounts - calculate sum
     *  @return calculate sum
     */
    public long getFaTotalOfDebitAmounts() {
        return getNumber(2 + 23, 14);
    } // getFaTotalOfDebitAmounts
    //----------------
    /** Field faNoOfCreditMovements - calculate sum */
    protected static final Field FANOOFCREDITMOVEMENTS = new Field(2 + 37, 5, "faNoOfCreditMovements");

    /** Sets faNoOfCreditMovements - calculate sum
     *  @param faNoOfCreditMovements calculate sum
     */
    public void setFaNoOfCreditMovements(long faNoOfCreditMovements) {
        setNumber(2 + 37, 5, faNoOfCreditMovements);
    } // setFaNoOfCreditMovements

    /** Gets faNoOfCreditMovements - calculate sum
     *  @return calculate sum
     */
    public long getFaNoOfCreditMovements() {
        return getNumber(2 + 37, 5);
    } // getFaNoOfCreditMovements
    //----------------
    /** Field faTotalOfCreditAmounts - calculate sum */
    protected static final Field FATOTALOFCREDITAMOUNTS = new Field(2 + 42, 14, "faTotalOfCreditAmounts");

    /** Sets faTotalOfCreditAmounts - calculate sum
     *  @param faTotalOfCreditAmounts calculate sum
     */
    public void setFaTotalOfCreditAmounts(long faTotalOfCreditAmounts) {
        setNumber(2 + 42, 14, faTotalOfCreditAmounts);
    } // setFaTotalOfCreditAmounts

    /** Gets faTotalOfCreditAmounts - calculate sum
     *  @return calculate sum
     */
    public long getFaTotalOfCreditAmounts() {
        return getNumber(2 + 42, 14);
    } // getFaTotalOfCreditAmounts
    //----------------
    /** Field faSymbolClosingBalance - sign, 1=Debit, 2=Credit */
    protected static final Field FASYMBOLCLOSINGBALANCE = new Field(2 + 56, 1, "faSymbolClosingBalance");

    /** Sets faSymbolClosingBalance - sign, 1=Debit, 2=Credit
     *  @param faSymbolClosingBalance sign, 1=Debit, 2=Credit
     */
    public void setFaSymbolClosingBalance(String faSymbolClosingBalance) {
        setString(2 + 56, 1, faSymbolClosingBalance);
    } // setFaSymbolClosingBalance

    /** Gets faSymbolClosingBalance - sign, 1=Debit, 2=Credit
     *  @return sign, 1=Debit, 2=Credit
     */
    public String getFaSymbolClosingBalance() {
        return getString(2 + 56, 1);
    } // getFaSymbolClosingBalance
    //----------------
    /** Field faClosingBalance - amount (2 decimal places) */
    protected static final Field FACLOSINGBALANCE = new Field(2 + 57, 14, "faClosingBalance");

    /** Sets faClosingBalance - amount (2 decimal places)
     *  @param faClosingBalance amount (2 decimal places)
     */
    public void setFaClosingBalance(long faClosingBalance) {
        setNumber(2 + 57, 14, faClosingBalance);
    } // setFaClosingBalance

    /** Gets faClosingBalance - amount (2 decimal places)
     *  @return amount (2 decimal places)
     */
    public long getFaClosingBalance() {
        return getNumber(2 + 57, 14);
    } // getFaClosingBalance
    //----------------
    /** Field faCurrencyCode - numeric currency, EUR=978 */
    protected static final Field FACURRENCYCODE = new Field(2 + 71, 3, "faCurrencyCode");

    /** Sets faCurrencyCode - numeric currency, EUR=978
     *  @param faCurrencyCode numeric currency, EUR=978
     */
    public void setFaCurrencyCode(String faCurrencyCode) {
        setString(2 + 71, 3, faCurrencyCode);
    } // setFaCurrencyCode

    /** Gets faCurrencyCode - numeric currency, EUR=978
     *  @return numeric currency, EUR=978
     */
    public String getFaCurrencyCode() {
        return getString(2 + 71, 3);
    } // getFaCurrencyCode
    //----------------
    /** Field faFiller - blank blank F */
    protected static final Field FAFILLER = new Field(2 + 74, 4, "faFiller");

    /** Sets faFiller - blank blank F
     *  @param faFiller blank blank F
     */
    public void setFaFiller(String faFiller) {
        setString(2 + 74, 4, faFiller);
    } // setFaFiller

    /** Gets faFiller - blank blank F
     *  @return blank blank F
     */
    public String getFaFiller() {
        return getString(2 + 74, 4);
    } // getFaFiller
    //----------------
    /** Field ffNines - 9999...9 */
    protected static final Field FFNINES = new Field(2 + 0, 18, "ffNines");

    /** Sets ffNines - 9999...9
     *  @param ffNines 9999...9
     */
    public void setFfNines(String ffNines) {
        setString(2 + 0, 18, ffNines);
    } // setFfNines

    /** Gets ffNines - 9999...9
     *  @return 9999...9
     */
    public String getFfNines() {
        return getString(2 + 0, 18);
    } // getFfNines
    //----------------
    /** Field ffNoOfRecords - calculate sum */
    protected static final Field FFNOOFRECORDS = new Field(2 + 18, 6, "ffNoOfRecords");

    /** Sets ffNoOfRecords - calculate sum
     *  @param ffNoOfRecords calculate sum
     */
    public void setFfNoOfRecords(long ffNoOfRecords) {
        setNumber(2 + 18, 6, ffNoOfRecords);
    } // setFfNoOfRecords

    /** Gets ffNoOfRecords - calculate sum
     *  @return calculate sum
     */
    public long getFfNoOfRecords() {
        return getNumber(2 + 18, 6);
    } // getFfNoOfRecords
    //----------------
    /** Field ffFiller - 9999...9 */
    protected static final Field FFFILLER = new Field(2 + 24, 54, "ffFiller");

    /** Sets ffFiller - 9999...9
     *  @param ffFiller 9999...9
     */
    public void setFfFiller(String ffFiller) {
        setString(2 + 24, 54, ffFiller);
    } // setFfFiller

    /** Gets ffFiller - 9999...9
     *  @return 9999...9
     */
    public String getFfFiller() {
        return getString(2 + 24, 54);
    } // getFfFiller
    //----------------

    /** Gets an XML tag for the record
     *  @param namespace namespace for the generated XML tag with colon, or empty
     *  @return an XML element for a AEB43 record
     */
    public String getXMLTag(String namespace) {
        return namespace + "AEB43";
    } // getXMLTag

    /** Fires several SAX events for the record
     *  @param generator transformer with SAX event firing  methods
     */
    public void fireElements(BaseTransformer generator) {
        String localName = "";
        AttributesImpl attrs = null;
        attrs = new AttributesImpl();
                attrs.addAttribute("", "recordCode", "recordCode", "CDATA", replaceAttrText(getRecordCode()));
        generator.fireStartElement("AEB43", attrs);
        if (false) {
        } else if (getRecordCode().equals("11")) {
            attrs = new AttributesImpl();
                attrs.addAttribute("", "caKeyOfBank", "caKeyOfBank", "CDATA", replaceAttrText(getCaKeyOfBank()));
                attrs.addAttribute("", "caKeyOfOffice", "caKeyOfOffice", "CDATA", replaceAttrText(getCaKeyOfOffice()));
                attrs.addAttribute("", "caAccountNo", "caAccountNo", "CDATA", replaceAttrText(getCaAccountNo()));
                attrs.addAttribute("", "caInitialDate", "caInitialDate", "CDATA", replaceAttrText(getCaInitialDate()));
                attrs.addAttribute("", "caFinalDate", "caFinalDate", "CDATA", replaceAttrText(getCaFinalDate()));
                attrs.addAttribute("", "caKeyOwesOrToHave", "caKeyOwesOrToHave", "CDATA", replaceAttrText(getCaKeyOwesOrToHave()));
                attrs.addAttribute("", "caOpeningBalance", "caOpeningBalance", "CDATA", Long.toString(getCaOpeningBalance()));
                attrs.addAttribute("", "caCurrencyCode", "caCurrencyCode", "CDATA", replaceAttrText(getCaCurrencyCode()));
                attrs.addAttribute("", "caModalityOfInformation", "caModalityOfInformation", "CDATA", replaceAttrText(getCaModalityOfInformation()));
                attrs.addAttribute("", "caShortName", "caShortName", "CDATA", replaceAttrText(getCaShortName()));
                attrs.addAttribute("", "caFiller", "caFiller", "CDATA", replaceAttrText(getCaFiller()));
            generator.fireEmptyElement("ca", attrs);
        } else if (getRecordCode().equals("22")) {
            attrs = new AttributesImpl();
                attrs.addAttribute("", "pmFiller", "pmFiller", "CDATA", replaceAttrText(getPmFiller()));
                attrs.addAttribute("", "pmKeyOfOfficeOrigin", "pmKeyOfOfficeOrigin", "CDATA", replaceAttrText(getPmKeyOfOfficeOrigin()));
                attrs.addAttribute("", "pmDateOperation", "pmDateOperation", "CDATA", replaceAttrText(getPmDateOperation()));
                attrs.addAttribute("", "pmDateValue", "pmDateValue", "CDATA", replaceAttrText(getPmDateValue()));
                attrs.addAttribute("", "pmCommonDetail", "pmCommonDetail", "CDATA", replaceAttrText(getPmCommonDetail()));
                attrs.addAttribute("", "pmOwnDetail", "pmOwnDetail", "CDATA", replaceAttrText(getPmOwnDetail()));
                attrs.addAttribute("", "pmKeyOwesOrToHave", "pmKeyOwesOrToHave", "CDATA", replaceAttrText(getPmKeyOwesOrToHave()));
                attrs.addAttribute("", "pmValue", "pmValue"  , "CDATA", Long.toString(getPmValue()));
                attrs.addAttribute("", "pmReference1", "pmReference1", "CDATA", replaceAttrText(getPmReference1()));
                attrs.addAttribute("", "pmReference2", "pmReference2", "CDATA", replaceAttrText(getPmReference2()));
                attrs.addAttribute("", "pmNofOfDocument", "pmNofOfDocument", "CDATA", replaceAttrText(getPmNofOfDocument()));
            generator.fireEmptyElement("pm", attrs);
        } else if (getRecordCode().equals("23")) {
            attrs = new AttributesImpl();
                attrs.addAttribute("", "cdDataCode", "cdDataCode", "CDATA", Long.toString(getCdDataCode()));
                attrs.addAttribute("", "cdDetail1", "cdDetail1", "CDATA", replaceAttrText(getCdDetail1()));
                attrs.addAttribute("", "cdDetail2", "cdDetail2", "CDATA", replaceAttrText(getCdDetail2()));
            generator.fireEmptyElement("cd", attrs);
        } else if (getRecordCode().equals("33")) {
            attrs = new AttributesImpl();
                attrs.addAttribute("", "faKeyOfBank", "faKeyOfBank", "CDATA", replaceAttrText(getFaKeyOfBank()));
                attrs.addAttribute("", "faKeyOfOffice", "faKeyOfOffice", "CDATA", replaceAttrText(getFaKeyOfOffice()));
                attrs.addAttribute("", "faAccountNo", "faAccountNo", "CDATA", replaceAttrText(getFaAccountNo()));
                attrs.addAttribute("", "faNoOfDebitMovements", "faNoOfDebitMovements", "CDATA", Long.toString(getFaNoOfDebitMovements()));
                attrs.addAttribute("", "faTotalOfDebitAmounts", "faTotalOfDebitAmounts", "CDATA", Long.toString(getFaTotalOfDebitAmounts()));
                attrs.addAttribute("", "faNoOfCreditMovements", "faNoOfCreditMovements", "CDATA", Long.toString(getFaNoOfCreditMovements()));
                attrs.addAttribute("", "faTotalOfCreditAmounts", "faTotalOfCreditAmounts", "CDATA", Long.toString(getFaTotalOfCreditAmounts()));
                attrs.addAttribute("", "faSymbolClosingBalance", "faSymbolClosingBalance", "CDATA", replaceAttrText(getFaSymbolClosingBalance()));
                attrs.addAttribute("", "faClosingBalance", "faClosingBalance", "CDATA", Long.toString(getFaClosingBalance()));
                attrs.addAttribute("", "faCurrencyCode", "faCurrencyCode", "CDATA", replaceAttrText(getFaCurrencyCode()));
                attrs.addAttribute("", "faFiller", "faFiller", "CDATA", replaceAttrText(getFaFiller()));
            generator.fireEmptyElement("fa", attrs);
        } else if (getRecordCode().equals("88")) {
            attrs = new AttributesImpl();
                attrs.addAttribute("", "ffNines", "ffNines"  , "CDATA", replaceAttrText(getFfNines()));
                attrs.addAttribute("", "ffNoOfRecords", "ffNoOfRecords", "CDATA", Long.toString(getFfNoOfRecords()));
                attrs.addAttribute("", "ffFiller", "ffFiller", "CDATA", replaceAttrText(getFfFiller()));
            generator.fireEmptyElement("ff", attrs);
        }
        generator.fireEndElement("AEB43");
    } // fireElements

    /** Receive notification of the start of an element.
     *  Looks for the element which contains encoded strings.
     *  @param uri The Namespace URI, or the empty string if the element has no Namespace URI
     *  or if Namespace processing is not being performed.
     *  @param localName the local name (without prefix),
     *  or the empty string if Namespace processing is not being performed.
     *  @param qName the qualified name (with prefix),
     *  or the empty string if qualified names are not available.
     *  @param attrs the attributes attached to the element.
     *  If there are no attributes, it shall be an empty Attributes object.
     *  @throws SAX Exception
     */
    public void startElement(String uri, String localName, String qName, Attributes attrs) throws SAXException {
        try {
            if (false) {
            } else if (qName.equals("AEB43")) {
                setRecordCode      (attrs.getValue("recordCode"));
            } else if (qName.equals("ca")) {
                setCaKeyOfBank     (attrs.getValue("caKeyOfBank"));
                setCaKeyOfOffice   (attrs.getValue("caKeyOfOffice"));
                setCaAccountNo     (attrs.getValue("caAccountNo"));
                setCaInitialDate   (attrs.getValue("caInitialDate"));
                setCaFinalDate     (attrs.getValue("caFinalDate"));
                setCaKeyOwesOrToHave               (attrs.getValue("caKeyOwesOrToHave"));
                setCaOpeningBalance                (Long.parseLong(attrs.getValue("caOpeningBalance")));
                setCaCurrencyCode  (attrs.getValue("caCurrencyCode"));
                setCaModalityOfInformation         (attrs.getValue("caModalityOfInformation"));
                setCaShortName     (attrs.getValue("caShortName"));
                setCaFiller        (attrs.getValue("caFiller"));
            } else if (qName.equals("pm")) {
                setPmFiller        (attrs.getValue("pmFiller"));
                setPmKeyOfOfficeOrigin             (attrs.getValue("pmKeyOfOfficeOrigin"));
                setPmDateOperation (attrs.getValue("pmDateOperation"));
                setPmDateValue     (attrs.getValue("pmDateValue"));
                setPmCommonDetail  (attrs.getValue("pmCommonDetail"));
                setPmOwnDetail     (attrs.getValue("pmOwnDetail"));
                setPmKeyOwesOrToHave               (attrs.getValue("pmKeyOwesOrToHave"));
                setPmValue         (Long.parseLong(attrs.getValue("pmValue")));
                setPmReference1    (attrs.getValue("pmReference1"));
                setPmReference2    (attrs.getValue("pmReference2"));
                setPmNofOfDocument (attrs.getValue("pmNofOfDocument"));
            } else if (qName.equals("cd")) {
                setCdDataCode      (Long.parseLong(attrs.getValue("cdDataCode")));
                setCdDetail1       (attrs.getValue("cdDetail1"));
                setCdDetail2       (attrs.getValue("cdDetail2"));
            } else if (qName.equals("fa")) {
                setFaKeyOfBank     (attrs.getValue("faKeyOfBank"));
                setFaKeyOfOffice   (attrs.getValue("faKeyOfOffice"));
                setFaAccountNo     (attrs.getValue("faAccountNo"));
                setFaNoOfDebitMovements            (Long.parseLong(attrs.getValue("faNoOfDebitMovements")));
                setFaTotalOfDebitAmounts           (Long.parseLong(attrs.getValue("faTotalOfDebitAmounts")));
                setFaNoOfCreditMovements           (Long.parseLong(attrs.getValue("faNoOfCreditMovements")));
                setFaTotalOfCreditAmounts          (Long.parseLong(attrs.getValue("faTotalOfCreditAmounts")));
                setFaSymbolClosingBalance          (attrs.getValue("faSymbolClosingBalance"));
                setFaClosingBalance                (Long.parseLong(attrs.getValue("faClosingBalance")));
                setFaCurrencyCode  (attrs.getValue("faCurrencyCode"));
                setFaFiller        (attrs.getValue("faFiller"));
            } else if (qName.equals("ff")) {
                setFfNines         (attrs.getValue("ffNines"));
                setFfNoOfRecords   (Long.parseLong(attrs.getValue("ffNoOfRecords")));
                setFfFiller        (attrs.getValue("ffFiller"));
            } else {
                // silently ignore other elements
            }
        } catch (Exception exc) {
            throw new SAXException("invalid attribute value ", exc);
        }
    } // startElement

} // class AEB43RecordBase
